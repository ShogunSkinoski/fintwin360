// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240730100803_created_tables_for_valueobjects")]
    partial class created_tables_for_valueobjects
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Members.Model.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("Domain.Members.Model.MemberProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("MemberProfiles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Xml")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("Domain.Members.Model.MemberProfile", b =>
                {
                    b.HasOne("Domain.Members.Model.Member", "Member")
                        .WithOne("MemberProfile")
                        .HasForeignKey("Domain.Members.Model.MemberProfile", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Domain.Members.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("MemberProfileId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("varchar(100)");

                            b1.Property<float?>("Latitude")
                                .HasColumnType("float");

                            b1.Property<float?>("Longitude")
                                .HasColumnType("float");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("varchar(200)");

                            b1.HasKey("MemberProfileId");

                            b1.ToTable("Addresses", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MemberProfileId");
                        });

                    b.OwnsOne("Domain.Members.ValueObjects.EducationInformation", "EducationLevel", b1 =>
                        {
                            b1.Property<Guid>("MemberProfileId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("EducationCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)");

                            b1.Property<string>("EducationLevelName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)");

                            b1.HasKey("MemberProfileId");

                            b1.ToTable("EducationLevels", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MemberProfileId");
                        });

                    b.OwnsOne("Domain.Members.ValueObjects.EmploymentInformation", "EmploymentStatus", b1 =>
                        {
                            b1.Property<Guid>("MemberProfileId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("EmploymentIndustry")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)");

                            b1.HasKey("MemberProfileId");

                            b1.ToTable("EmploymentStatuses", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MemberProfileId");
                        });

                    b.OwnsOne("Domain.Members.ValueObjects.FamilySize", "FamilySize", b1 =>
                        {
                            b1.Property<Guid>("MemberProfileId")
                                .HasColumnType("char(36)");

                            b1.Property<int>("Size")
                                .HasColumnType("int");

                            b1.HasKey("MemberProfileId");

                            b1.ToTable("FamilySizes", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MemberProfileId");
                        });

                    b.OwnsOne("Domain.Members.ValueObjects.ResidentialInformation", "ResidentialInformation", b1 =>
                        {
                            b1.Property<Guid>("MemberProfileId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("varchar(20)");

                            b1.HasKey("MemberProfileId");

                            b1.ToTable("ResidentialInformation", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MemberProfileId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("EducationLevel")
                        .IsRequired();

                    b.Navigation("EmploymentStatus")
                        .IsRequired();

                    b.Navigation("FamilySize")
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("ResidentialInformation")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Members.Model.Member", b =>
                {
                    b.Navigation("MemberProfile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
